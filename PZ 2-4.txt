Практическое занятие № 2
Тема: Знакомство и работа с IDE PyCharm Community. Построение программ линейной структуры в IDE PyCharm Community.
Цель: Выработка первичных навыков работы с IDE PyCharm Community, составление
программ линейной структуры.
Постановка задачи.
Разработать программу, выводящую на экран положительные четные числа от
произвольного целого числа в обратном порядке.
Тип алгоритма: циклический.
Текст программы:
N = int(input("Введите количество секунд"))
M = N // 60
print("С начала суток прошло" M)
Протокол работы программы:
Введите целое число: 16
14 12 10 8 6 4 2 0
Программа успешно завершена!
Process finished with exit code 0
Вывод: в процессе выполнения практического занятия выработал(а) навыки составления
программ циклической структуры в IDE PyCharm Community. Были использованы
языковые конструкции Input, Print.
Выполнены разработка кода, отладка, тестирование, оптимизация программного кода.
Готовые программные коды выложены на GitHub.




 Практическое занятие №3
Тема: Составление программ ветвящейся структуры в IDE PyCharm Community.
Цель: Закрепить усвоенные знания, понятия, алгоритмы, основные принципы составления программ, приобрести навыки составление программ ветвящейся структуры в IDE PyCharm Community.
Постановка задачи.
1. Дано четырехзначное число. Проверить истинность высказывания: «Данное число читается одинаково слева направо и справа налево».
2. Даны координаты двух различных полей шахматной доски х1, у1, х2, у2 (целые числа, лежащие в диапазоне 1-8). Проверить истинность высказывания: «Ладья за один ход может перейти с одного поля на другое».
Тип алгоритма: линейный
Текст программы:
# Даны три целых числа. Найти количество положительных чисел в исходном наборе.
a, b, c = input("Введите первое число: "), input("Введите второе число: "),
input("Введите третье число: ")
while type(a) != int: # обработка исключений
    try:
        a = int(a)
    except ValueError:
        print("Неправильно ввели!")
    a = input("Введите первое число: ")
while type(b) != int: # обработка исключений
    try:
        b = int(b)
    except ValueError:
        print("Неправильно ввели!")
        b = input("Введите второе число: ")
while type(c) != int: # обработка исключений
    try:
        c = int(c)
    except ValueError:
        print("Неправильно ввели!")
        c = input("Введите третье число: ")
k = 0
if a > 0: k += 1
if b > 0: k += 1
if c > 0: k += 1
print('Количество положительных чисел = ', k)
# Даны три переменные вещественного типа: A, B, C.
# Если их значения упорядочены по возрастанию или убыванию, то удвоить их;
# в противном случае заменить значение каждой переменной на противоположное.
# Вывести новые значения переменных A, B, C.
a, b, c = input("Введите первое число: "), input("Введите второе число: "),
input("Введите третье число: ")
while type(a) != float: # обработка исключений
    try:
        a = float(a)
    except ValueError:
        print("Неправильно ввели!")
        a = input("Введите первое число: ")
while type(b) != float: # обработка исключений
    try:
        b = float(b)
    except ValueError:
        print("Неправильно ввели!")
        b = input("Введите второе число: ")
while type(c) != float: # обработка исключений
    try:
        c = float(c)
    except ValueError:
    print("Неправильно ввели!")
        c = input("Введите третье число: ")
if (a>b>c) or (a<b<c):
    a *= 2;b *= 2;c *= 2;
    print(a,b,c)
else:
    a = -a; b = -b; c = -c;
    print(a, b, c)
# Дано целое число K. Вывести строку-описание оценки, соответствующей числу K
# (1 — «плохо», 2 — «неудовлетворительно», 3 — «удовлетворительно»,
# 4 — «хорошо», 5 — «отлично»). Если K не лежит в диапазоне 1-5, то вывести строку
«ошибка».
k = input("Введите число: ")
while type(k) != int: # обработка исключений
    try:
        k = int(k)
    except ValueError:
        print("Неправильно ввели!")
        k = input("Введите число: ")
if k == 1: print('Плохо')
elif k == 2: print('Неудовлетворительно')
elif k == 3: print('Удовлетворительно')
elif k == 4: print('Хорошо')
elif k == 5: print('Отлично')
else: print('Нет такой оценки!')
#####################################################################
N = int(input('Введите число'))
if (N // 1000 == N % 10) and (N // 100 % 10 == N // 10 % 10):
    print("True")
else:
    print("False")
#################################
x1 = int(input('Введите число'))
y1 = int(input('Введите число'))
x2 = int(input('Введите число'))
y2 = int(input('Введите число'))
if (1 <= x2 <= 8 and y1 == y2) or (1 <= y2 <= 8 and x1 == x2):
    print("true")
else:
    print("false")
Протокол выполнения программы
Ввод целого числа
Проверка
Вывод на экран истины или лжи
Вывод: в процессе выполнения практического занятия выработал(а) навыки составления ветвящейся структуры в IDE PyCharm Community. Были использованы языковые конструкции if, else. Выполнены разработка кода, отладка, тестирование, оптимизация программного кода. Готовые программные коды выложены на GitHub.




Тема: Cоставление программ циклической структуры в IDE PyCharm Community.
Цель: закрепить усвоенные знания, понятия, алгоритмы, основные принципы составления программ, приобрести навыки составление программ циклической структуры в IDE PyCharm Community.
Постановка задачи.
Разработать программу, выводящую на экран положительные четные числа от
произвольного целого числа в обратном порядке.
Тип алгоритма: циклический.
A = int(input())
B = int(input())
for i in range(A, B + 1):
if i == A + 1:
    print(i)
    print(i)
else:
    print(i)
###################
N = int(input())
K = int(input())
while N > K:
    Chastnoe = N - K
Ostatok = N - (K * Chastnoe)
Print(Chastnoe)
Print(Ostatok)